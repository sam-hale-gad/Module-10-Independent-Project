View(df_non_energy)
sum(df$weights)
df_non_energy <- df %>%
filter(energy_intensity_group != "Energy")
names(df_non_energy)
knitr::opts_chunk$set(echo = TRUE, fig.height = 15, fig.width = 20)
# Load library function
fn_load_libraries <- function(){
# Package names
packages <- c(
"rstudioapi",
"tidyverse",
"janitor",
"stringr"
)
# Install packages not yet installed
installed_packages <- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(packages[!installed_packages])
}
# Packages loading
lapply(packages, library, character.only = TRUE)
}
# load libar
fn_load_libraries()
# Set working directory
current_dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(current_dir)
getwd()
data_dir <- paste0(current_dir, "/data/")
# file names
file_cpi_by_product <- "cpi_detailed_reference_tables_table_4.csv"
file_energy_intensity_by_product <- "CPI Energy Intensity of Household purchases, COICOP class level categories.csv"
file_cpi_cont_by_energy_intensity_class <- "Contributions to Consumer Prices Index (CPI) inflation by energy intensity, percentage points, UK, January 2019 to February 2023.csv"
# import raw data
data_cpi_by_product <- read.csv(paste0(current_dir, "/data/", file_cpi_by_product))
data_energy_intensity_by_product <- read.csv(paste0(current_dir, "/data/", file_energy_intensity_by_product))
data_cpi_cont_by_energy_intensity_class <- read.csv(paste0(current_dir, "/data/", file_cpi_cont_by_energy_intensity_class))
# tidy column names
cpi_by_product <- janitor::clean_names(data_cpi_by_product)
energy_intensity_by_product <- janitor::clean_names(data_energy_intensity_by_product)
cpi_cont_by_energy_intensity_class <- janitor::clean_names(data_cpi_cont_by_energy_intensity_class)
df <- energy_intensity_by_product
df <- df %>% separate(coicop_class_level_item,
into = c("Code", "Description"),
sep = ":",
remove = TRUE) %>%
mutate(Code = stringr::str_squish(Code),
Description = stringr::str_squish(Description))
cpi_by_product <- cpi_by_product %>%
mutate(coicop_class_level_item = stringr::str_squish(coicop_class_level_item)) %>%
separate(coicop_class_level_item,
into = c("Code", "Description"),
sep = "\\s",
remove = FALSE,
extra = "merge")
cpi_by_product <- cpi_by_product %>%
select("Code", "Description", "weights", "x12_month_percentage_change_feb_2023")
# df <- merge(df,
#             cpi_by_product,
#             by = "Code",
#             all.x = TRUE)
# manually amend values in cpi_by_product that are causing NAs in the merged df
cpi_by_product <- cpi_by_product %>%
mutate(Code = case_when(
Code == "05.3.1/2" ~ "05.3.1",
Code == "06.1.2/3" ~ "06.1.2",
Code == "06.2.1/3" ~ "06.2.1",
Code == "07.1.2/3" ~ "07.1.2",
Code == "08.2/3" ~ "08.2",
Code == "09.2.1/2" ~ "09.2.1",
Code == "09.3.4/5" ~ "09.3.4",
Code == "09.5.3/4" ~ "09.5.3",
Code == "12.1.2/3" ~ "12.1.2",
TRUE ~ Code
))
df <- merge(df,
cpi_by_product,
by = "Code",
all.x = TRUE)
# Table of industry codes
industry_codes <- cpi_by_product[2:13, c("Code", "Description")] %>%
rename(Industry_Code = Code,
Industry = Description)
# Extract the industry code form teh longer product code
df <- df %>% mutate(Industry_Code = substr(Code, start = 1, stop = 2))
# Add industry code and description fro each product
df <- merge(df,
industry_codes,
by = "Industry_Code",
all.x = TRUE)
feb23_inflation <- as.data.frame(t(cpi_cont_by_energy_intensity_class %>% filter(month == "2023 FEB")))
feb23_inflation <- feb23_inflation %>%
filter(V1 != "2023 FEB") %>%
rename(inflation_contribution = V1) %>%
mutate(inflation_contribution = as.numeric(inflation_contribution))
print(feb23_inflation)
total_inflation <- sum(feb23_inflation$inflation_contribution)
print(total_inflation)
feb23_inflation <- feb23_inflation %>%
mutate(inflation_contribution_ppn = inflation_contribution/total_inflation,
inflation_contribution_pct = round(100*inflation_contribution_ppn,1))
print(feb23_inflation)
df <- df %>%
mutate(weight_proportion = weights/1000,
inflation_contribution = x12_month_percentage_change_feb_2023 * weight_proportion)
head(df)
df_total_inflation <- sum(df$inflation_contribution)
print(df_total_inflation)
head(cpi_by_product, 13)
sum((cpi_by_product$weights[2:13]/1000) * cpi_by_product$x12_month_percentage_change_feb_2023[2:13])
df <- df %>%
mutate(inflation_contribution_scaled = inflation_contribution *
total_inflation/df_total_inflation)
# check
sum(df$inflation_contribution_scaled)
df_summary1 <- df %>%
group_by(energy_intensity_group) %>%
summarise(Count = n(),
Total_infl = sum(inflation_contribution_scaled),
Percentage = round(100 * sum(inflation_contribution_scaled) /
sum(df$inflation_contribution_scaled), 1 ))
df_summary1
df_summary2 <- df %>%
group_by(Industry_Code, Industry) %>%
summarise(Count = n(),
Total_infl = sum(inflation_contribution_scaled),
Percentage = round(100 * sum(inflation_contribution_scaled) /
sum(df$inflation_contribution_scaled), 1 ),
Ave_energy_intensity = mean(energy_intensity))
df_summary2
df_non_energy <- df %>%
filter(energy_intensity_group != "Energy")
names(df_non_energy)
df_non_energy <- df_non_energy %>%
mutate(energy_inflation = inflation_contribution_scaled * energy_intensity,
non_energy_inflation = inflation_contribution_scaled * (1-energy_intensity))
sum(df_non_energy$inflation_contribution_scaled)
sum(df_non_energy$energy_inflation)
sum(df_non_energy$non_energy_inflation)
6.462005+0.1227685
df_non_energy <- df_non_energy %>%
mutate(energy_inflation = inflation_contribution_scaled * energy_intensity,
non_energy_inflation = inflation_contribution_scaled * (1-energy_intensity))
sum(df_non_energy$inflation_contribution_scaled)
sum(df_non_energy$energy_inflation)
sum(df_non_energy$non_energy_inflation)
df_non_energy <- df_non_energy %>%
mutate(energy_inflation = inflation_contribution_scaled * energy_intensity,
non_energy_inflation = inflation_contribution_scaled * (1-energy_intensity))
sum(df_non_energy$inflation_contribution_scaled)
sum(df_non_energy$energy_inflation)
sum(df_non_energy$non_energy_inflation)
100 * sum(df_non_energy$energy_inflation)/sum(df_non_energy$inflation_contribution_scaled)
100 * sum(df_non_energy$non_energy_inflation)/total_inflation
df_non_energy <- df_non_energy %>%
mutate(energy_inflation = inflation_contribution_scaled * energy_intensity,
non_energy_inflation = inflation_contribution_scaled * (1-energy_intensity))
sum(df_non_energy$inflation_contribution_scaled)
sum(df_non_energy$energy_inflation)
sum(df_non_energy$non_energy_inflation)
100 * sum(df_non_energy$energy_inflation)/sum(df_non_energy$inflation_contribution_scaled)
100 * sum(df_non_energy$non_energy_inflation)/total_inflation
0.1227685/10.42
df_non_energy <- df_non_energy %>%
mutate(energy_inflation = inflation_contribution_scaled * energy_intensity,
non_energy_inflation = inflation_contribution_scaled * (1-energy_intensity))
sum(df_non_energy$inflation_contribution_scaled)
sum(df_non_energy$energy_inflation)
print("Total inflation for February 2023 that in neither direct or indirect energy related")
sum(df_non_energy$non_energy_inflation)
100 * sum(df_non_energy$energy_inflation)/sum(df_non_energy$inflation_contribution_scaled)
print("Percentage of total inflation for February 2023 that in neither direct or indirect energy related")
100 * sum(df_non_energy$non_energy_inflation)/total_inflation
df_non_energy <- df_non_energy %>%
mutate(energy_inflation = inflation_contribution_scaled * energy_intensity,
non_energy_inflation = inflation_contribution_scaled * (1-energy_intensity))
# sum(df_non_energy$inflation_contribution_scaled)
# sum(df_non_energy$energy_inflation)
print("Total inflation for February 2023 that in neither direct or indirect energy related:")
sum(df_non_energy$non_energy_inflation)
# 100 * sum(df_non_energy$energy_inflation)/sum(df_non_energy$inflation_contribution_scaled)
print("Percentage of total inflation for February 2023 that in neither direct or indirect energy related:")
100 * sum(df_non_energy$non_energy_inflation)/total_inflation
round(100 * sum(df_non_energy$non_energy_inflation)/total_inflation,1)
df_non_energy <- df_non_energy %>%
mutate(energy_inflation = inflation_contribution_scaled * energy_intensity,
non_energy_inflation = inflation_contribution_scaled * (1-energy_intensity))
# sum(df_non_energy$inflation_contribution_scaled)
# sum(df_non_energy$energy_inflation)
print("Total inflation for February 2023 that in neither direct or indirect energy related:")
sum(df_non_energy$non_energy_inflation)
# 100 * sum(df_non_energy$energy_inflation)/sum(df_non_energy$inflation_contribution_scaled)
print("Percentage of total inflation for February 2023 that in neither direct or indirect energy related:")
round(100 * sum(df_non_energy$non_energy_inflation)/total_inflation,3)
df_non_energy <- df_non_energy %>%
mutate(energy_inflation = inflation_contribution_scaled * energy_intensity,
non_energy_inflation = inflation_contribution_scaled * (1-energy_intensity))
# sum(df_non_energy$inflation_contribution_scaled)
# sum(df_non_energy$energy_inflation)
print("Total inflation for February 2023 that in neither direct or indirect energy related:")
sum(df_non_energy$non_energy_inflation)
# 100 * sum(df_non_energy$energy_inflation)/sum(df_non_energy$inflation_contribution_scaled)
print("Percentage of total inflation for February 2023 that in neither direct or indirect energy related:")
round(100 * sum(df_non_energy$non_energy_inflation)/total_inflation, 2)
df_non_energy_summary <- df_non_energy %>%
group_by(Industry_Code, Industry) %>%
summarise(Count = n(),
total_inflation = sum(non_energy_inflation),
Percentage = round(100 * sum(non_energy_inflation) /
sum(df$non_energy_inflation), 1 )
)
View(df_non_energy_summary)
df_non_energy_summary <- df_non_energy %>%
group_by(Industry_Code, Industry) %>%
summarise(Count = n(),
total_inflation = sum(non_energy_inflation),
Percentage = round(100 * sum(non_energy_inflation) /
sum(df_non_energy$non_energy_inflation), 1 )
)
df_non_energy_summary <- df_non_energy %>%
group_by(Industry_Code, Industry) %>%
summarise(Count = n(),
total_inflation = sum(non_energy_inflation),
Percentage = round(100 * sum(non_energy_inflation) /
sum(df_non_energy$non_energy_inflation), 1 )
)
df_non_energy_summary
sum(df_non_energy_summary$Percentage)
sum(df_non_energy_summary$total_inflation)
df_non_energy_summary <- df_non_energy %>%
group_by(Industry_Code, Industry) %>%
summarise(Count = n(),
total_inflation = round(sum(non_energy_inflation), 2),
Percentage = round(100 * sum(non_energy_inflation) /
sum(df_non_energy$non_energy_inflation), 1 )
)
df_non_energy_summary <- df_non_energy %>%
group_by(Industry_Code, Industry) %>%
summarise(Count = n(),
total_inflation = round(sum(non_energy_inflation), 2),
Percentage = round(100 * sum(non_energy_inflation) /
sum(df_non_energy$non_energy_inflation), 1 )
)
df_non_energy_summary <- df_non_energy %>%
group_by(Industry_Code, Industry) %>%
summarise(Count = n(),
total_inflation = round(sum(non_energy_inflation), 2),
Percentage = round(100 * sum(non_energy_inflation) /
sum(df_non_energy$non_energy_inflation), 1 )
)
df_non_energy_summary
View(cpi_by_product)
View(data_cpi_cont_by_energy_intensity_class)
ggplot(df_non_energy_summary, aes(x = reorder(Industry, -total_inflation), y = total_inflation)) +
geom_bar(stat = "identity", fill = "skyblue") +
labs(title = "Contribution to CPI from non-energy effects by industry",
x = "total_inflation",
y = "Industry") +
theme_minimal() +
coord_flip()  # Horizontal orientation
ggplot(df_non_energy_summary, aes(x = reorder(Industry, -total_inflation), y = total_inflation)) +
geom_bar(stat = "identity", fill = "skyblue") +
labs(title = "Contribution to CPI from non-energy effects by industry",
x = "total_inflation",
y = "Industry") +
theme_minimal() +
coord_flip() +  # Horizontal orientation
theme(
plot.title = element_text(size = 16),  # Increase title size
axis.title.x = element_text(size = 14),  # Increase x-axis label size
axis.title.y = element_text(size = 14)   # Increase y-axis label size
)
ggplot(df_non_energy_summary, aes(x = reorder(Industry, -total_inflation), y = total_inflation)) +
geom_bar(stat = "identity", fill = "skyblue") +
labs(title = "Contribution to CPI from non-energy effects by industry",
x = "total_inflation",
y = "Industry") +
theme_minimal() +  # Horizontal orientation
theme(
plot.title = element_text(size = 16),  # Increase title size
axis.title.x = element_text(size = 14),  # Increase x-axis label size
axis.title.y = element_text(size = 14)   # Increase y-axis label size
)
ggplot(df_non_energy_summary, aes(x = reorder(Industry, -total_inflation), y = total_inflation)) +
geom_bar(stat = "identity", fill = "skyblue") +
labs(title = "Contribution to CPI from non-energy effects by industry",
x = "Industry",
y = "Inflation") +
coord_flip() +
theme_minimal() +  # Horizontal orientation
theme(
plot.title = element_text(size = 16),  # Increase title size
axis.title.x = element_text(size = 14),  # Increase x-axis label size
axis.title.y = element_text(size = 14)   # Increase y-axis label size
)
ggplot(df_non_energy_summary, aes(x = reorder(Industry, -total_inflation), y = total_inflation)) +
geom_bar(stat = "identity", fill = "skyblue") +
labs(title = "Contribution to CPI from non-energy effects by industry",
x = "Industry",
y = "Inflation") +
coord_flip() +
theme_classic() +  # Horizontal orientation
theme(
plot.title = element_text(size = 16),  # Increase title size
axis.title.x = element_text(size = 14),  # Increase x-axis label size
axis.title.y = element_text(size = 14)   # Increase y-axis label size
)
ggplot(df_non_energy_summary, aes(x = reorder(Industry, -total_inflation), y = total_inflation)) +
geom_bar(stat = "identity", fill = "skyblue") +
labs(title = "Contribution to CPI from non-energy effects by industry",
x = "Industry",
y = "Inflation") +
coord_flip() +
theme_classic() +  # Horizontal orientation
theme(
plot.title = element_text(size = 16),  # Increase title size
axis.title.x = element_text(size = 14),  # Increase x-axis label size
axis.title.y = element_text(size = 14),   # Increase y-axis label size
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14)
)
ggplot(df_non_energy_summary, aes(x = reorder(Industry, -total_inflation), y = total_inflation)) +
geom_bar(stat = "identity", fill = "skyblue") +
labs(title = "Contribution to CPI from non-energy effects by industry",
x = "Industry",
y = "Inflation") +
coord_flip() +
theme_classic() +  # Horizontal orientation
theme(
plot.title = element_text(size = 16),  # Increase title size
axis.title.x = element_text(size = 14, face = "bold"),  # Increase x-axis label size
axis.title.y = element_text(size = 14, face = "bold"),   # Increase y-axis label size
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12)
)
ggplot(df_non_energy_summary, aes(x = reorder(Industry, -total_inflation), y = total_inflation)) +
geom_bar(stat = "identity", fill = "blue") +
labs(title = "Contribution to CPI from non-energy effects by industry",
x = "Industry",
y = "Inflation") +
coord_flip() +
theme_classic() +  # Horizontal orientation
theme(
plot.title = element_text(size = 16),  # Increase title size
axis.title.x = element_text(size = 14, face = "bold"),  # Increase x-axis label size
axis.title.y = element_text(size = 14, face = "bold"),   # Increase y-axis label size
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12)
)
knitr::opts_chunk$set(echo = TRUE, fig.height = 15, fig.width = 20)
# Load library function
fn_load_libraries <- function(){
# Package names
packages <- c(
"rstudioapi",
"tidyverse",
"janitor",
"stringr"
)
# Install packages not yet installed
installed_packages <- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(packages[!installed_packages])
}
# Packages loading
lapply(packages, library, character.only = TRUE)
}
# load libar
fn_load_libraries()
# Set working directory
current_dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(current_dir)
getwd()
knitr::opts_chunk$set(echo = TRUE, fig.height = 15, fig.width = 20)
# Load library function
fn_load_libraries <- function(){
# Package names
packages <- c(
"rstudioapi",
"tidyverse",
"janitor",
"stringr"
)
# Install packages not yet installed
installed_packages <- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(packages[!installed_packages])
}
# Packages loading
lapply(packages, library, character.only = TRUE)
}
# load libar
fn_load_libraries()
# Set working directory
current_dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(current_dir)
getwd()
data_dir <- paste0(current_dir, "/data/")
# file names
file_cpi_by_product <- "cpi_detailed_reference_tables_table_4.csv"
file_energy_intensity_by_product <- "CPI Energy Intensity of Household purchases, COICOP class level categories.csv"
file_cpi_cont_by_energy_intensity_class <- "Contributions to Consumer Prices Index (CPI) inflation by energy intensity, percentage points, UK, January 2019 to February 2023.csv"
# import raw data
data_cpi_by_product <- read.csv(paste0(current_dir, "/data/", file_cpi_by_product))
data_energy_intensity_by_product <- read.csv(paste0(current_dir, "/data/", file_energy_intensity_by_product))
data_cpi_cont_by_energy_intensity_class <- read.csv(paste0(current_dir, "/data/", file_cpi_cont_by_energy_intensity_class))
# tidy column names
cpi_by_product <- janitor::clean_names(data_cpi_by_product)
energy_intensity_by_product <- janitor::clean_names(data_energy_intensity_by_product)
cpi_cont_by_energy_intensity_class <- janitor::clean_names(data_cpi_cont_by_energy_intensity_class)
df <- energy_intensity_by_product
df <- df %>% separate(coicop_class_level_item,
into = c("Code", "Description"),
sep = ":",
remove = TRUE) %>%
mutate(Code = stringr::str_squish(Code),
Description = stringr::str_squish(Description))
cpi_by_product <- cpi_by_product %>%
mutate(coicop_class_level_item = stringr::str_squish(coicop_class_level_item)) %>%
separate(coicop_class_level_item,
into = c("Code", "Description"),
sep = "\\s",
remove = FALSE,
extra = "merge")
cpi_by_product <- cpi_by_product %>%
select("Code", "Description", "weights", "x12_month_percentage_change_feb_2023")
# df <- merge(df,
#             cpi_by_product,
#             by = "Code",
#             all.x = TRUE)
# manually amend values in cpi_by_product that are causing NAs in the merged df
cpi_by_product <- cpi_by_product %>%
mutate(Code = case_when(
Code == "05.3.1/2" ~ "05.3.1",
Code == "06.1.2/3" ~ "06.1.2",
Code == "06.2.1/3" ~ "06.2.1",
Code == "07.1.2/3" ~ "07.1.2",
Code == "08.2/3" ~ "08.2",
Code == "09.2.1/2" ~ "09.2.1",
Code == "09.3.4/5" ~ "09.3.4",
Code == "09.5.3/4" ~ "09.5.3",
Code == "12.1.2/3" ~ "12.1.2",
TRUE ~ Code
))
df <- merge(df,
cpi_by_product,
by = "Code",
all.x = TRUE)
# Table of industry codes
industry_codes <- cpi_by_product[2:13, c("Code", "Description")] %>%
rename(Industry_Code = Code,
Industry = Description)
# Extract the industry code form teh longer product code
df <- df %>% mutate(Industry_Code = substr(Code, start = 1, stop = 2))
# Add industry code and description fro each product
df <- merge(df,
industry_codes,
by = "Industry_Code",
all.x = TRUE)
df <- energy_intensity_by_product
df <- df %>% separate(coicop_class_level_item,
into = c("Code", "Description"),
sep = ":",
remove = TRUE) %>%
mutate(Code = stringr::str_squish(Code),
Description = stringr::str_squish(Description))
cpi_by_product <- cpi_by_product %>%
mutate(coicop_class_level_item = stringr::str_squish(coicop_class_level_item)) %>%
separate(coicop_class_level_item,
into = c("Code", "Description"),
sep = "\\s",
remove = FALSE,
extra = "merge")
feb23_inflation <- as.data.frame(t(cpi_cont_by_energy_intensity_class %>% filter(month == "2023 FEB")))
feb23_inflation <- feb23_inflation %>%
filter(V1 != "2023 FEB") %>%
rename(inflation_contribution = V1) %>%
mutate(inflation_contribution = as.numeric(inflation_contribution))
print(feb23_inflation)
total_inflation <- sum(feb23_inflation$inflation_contribution)
print(total_inflation)
feb23_inflation <- feb23_inflation %>%
mutate(inflation_contribution_ppn = inflation_contribution/total_inflation,
inflation_contribution_pct = round(100*inflation_contribution_ppn,1))
print(feb23_inflation)
# sum(df_non_energy$inflation_contribution_scaled)
sum(df_non_energy$energy_inflation)
df_non_energy <- df_non_energy %>%
mutate(energy_inflation = inflation_contribution_scaled * energy_intensity,
non_energy_inflation = inflation_contribution_scaled * (1-energy_intensity))
# sum(df_non_energy$inflation_contribution_scaled)
print("Total inflation for February 2023 that is due to teh indirect effect of energy price increase:")
sum(df_non_energy$energy_inflation)
print("Total inflation for February 2023 that is neither direct or indirect energy related:")
sum(df_non_energy$non_energy_inflation)
# 100 * sum(df_non_energy$energy_inflation)/sum(df_non_energy$inflation_contribution_scaled)
print("Percentage of total inflation for February 2023 that is neither direct or indirect energy related:")
round(100 * sum(df_non_energy$non_energy_inflation)/total_inflation, 2)
df_non_energy <- df_non_energy %>%
mutate(energy_inflation = inflation_contribution_scaled * energy_intensity,
non_energy_inflation = inflation_contribution_scaled * (1-energy_intensity))
# sum(df_non_energy$inflation_contribution_scaled)
print("Total inflation for February 2023 that is due to the indirect effect of energy price increase:")
sum(df_non_energy$energy_inflation)
print("Percentage of total inflation for February 2023 that is due to the indirect effect of energy price increase:")
round(100 * sum(df_non_energy$energy_inflation)/total_inflation, 2)
print("Total inflation for February 2023 that is neither direct or indirect energy related:")
sum(df_non_energy$non_energy_inflation)
# 100 * sum(df_non_energy$energy_inflation)/sum(df_non_energy$inflation_contribution_scaled)
print("Percentage of total inflation for February 2023 that is neither direct or indirect energy related:")
round(100 * sum(df_non_energy$non_energy_inflation)/total_inflation, 2)
